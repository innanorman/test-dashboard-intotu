[{"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\index.js":"1","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\App.js":"2","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\reportWebVitals.js":"3","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\Login.js":"4","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\Dashboard.js":"5","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\Sidebar.js":"6","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\SidebarData.js":"7","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\Pengiriman.js":"8","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\auth.services.js":"9","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\user.services.js":"10","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\auth-header.js":"11","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\DashboardHome.js":"12","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\TableShip.js":"13","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\shipments.services.js":"14"},{"size":498,"mtime":1607328854499,"results":"15","hashOfConfig":"16"},{"size":1227,"mtime":1607672733349,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2299,"mtime":1607614346259,"results":"19","hashOfConfig":"16"},{"size":1364,"mtime":1607614220387,"results":"20","hashOfConfig":"16"},{"size":939,"mtime":1607614408796,"results":"21","hashOfConfig":"16"},{"size":469,"mtime":1607613827203,"results":"22","hashOfConfig":"16"},{"size":7763,"mtime":1607614539647,"results":"23","hashOfConfig":"16"},{"size":826,"mtime":1607614455835,"results":"24","hashOfConfig":"16"},{"size":415,"mtime":1607522675938,"results":"25","hashOfConfig":"16"},{"size":282,"mtime":1607442670706,"results":"26","hashOfConfig":"16"},{"size":1700,"mtime":1607614126865,"results":"27","hashOfConfig":"16"},{"size":2878,"mtime":1607672257524,"results":"28","hashOfConfig":"16"},{"size":451,"mtime":1607579616564,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"14fith4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\index.js",[],["66","67"],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\App.js",["68"],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\reportWebVitals.js",[],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\Login.js",["69","70","71","72"],"import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../services/auth.services';\r\nimport imageLogo from '../images/logo.png';\r\nimport '../custom.css';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email)\r\n    const defaultEmail = 'admin@intotu.com';\r\n    if ( email !== defaultEmail){\r\n      setMessage('salah email')\r\n    } else if( email === ''){\r\n      setMessage('harus input email')\r\n    }\r\n  }\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password)\r\n    const defaultPassword = 'password';\r\n    if ( password !== defaultPassword){\r\n      setMessage('salah password')\r\n    } else if( password === ''){\r\n      setMessage('harus input password')\r\n    }\r\n  }\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    AuthService.login(email, password).then(\r\n      () => {\r\n        history.push(\"/admin/dashboard\");\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        const resMessage = (error.response && error.response.data && error.response.data.message || error.message || error.toString())\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"background-login\">\r\n      <Form className=\"login-box\" \r\n        onSubmit={handleLogin} \r\n      >\r\n        <img src={imageLogo}/>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={onChangeEmail}/>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={onChangePassword}/>\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"login-button\" block>Masuk</Button>\r\n        <p className=\"text-forgot\">Lupa password ?</p>\r\n        {message && ( <p className=\" text-error text-center\">{message}</p>)}\r\n      </Form>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\Dashboard.js",[],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\Sidebar.js",["73"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport imageLogo from '../images/logo.png';\r\nimport '../custom.css';\r\n\r\n\r\n\r\nfunction Sidebar(props) {\r\n  const [sidebar, setSidebar] = useState(true)\r\n  const showSidebar = () => setSidebar(!sidebar)\r\n  return (\r\n    <>\r\n      <nav className={props.sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n        <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n          <img src={imageLogo} />\r\n          {SidebarData.map((item, index) => {\r\n            return (\r\n              <li key={index} \r\n              className={item.cName} \r\n              >\r\n                <Link to={item.path}>\r\n                  {item.icon}\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\SidebarData.js",[],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\Pengiriman.js",["74","75","76"],"import React, {useState} from 'react';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport ShipmentService from '../services/shipments.services';\r\nimport '../custom.css';\r\n\r\n\r\nfunction Pengiriman() {\r\n  const [senderName, setSenderName] = useState(\" \");\r\n  const [senderEmail, setSenderEmail] = useState('');\r\n  const [senderAddress, setSenderAddress] = useState('');\r\n\r\n  const [receiverName, setReceiverName] = useState('');\r\n  const [receiverEmail, setReceiverEmail] = useState('');\r\n  const [receiverAddress, setReceiverAddress] = useState('');\r\n\r\n  const [goodsDetail, setGoodsDetail] = useState('');\r\n  const [weightInKilo, setWeightInKilo] = useState('');\r\n  const [volumeInCBM, setVolumeInCBM] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [succesMessage, setSuccessMessage] = useState('')\r\n  const [show, setShow] = useState(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(senderName || senderEmail || senderAddress || receiverName || receiverEmail || receiverAddress || weightInKilo || volumeInCBM === ''){\r\n      setError(!error)\r\n      setErrorMessage('data harus diisi')\r\n    }\r\n\r\n    const dataSubmit = {\r\n      'senderName' : senderName,\r\n      'senderEmail' : senderEmail,\r\n      'senderAddress' : senderAddress,\r\n      'receiverName' : receiverName,\r\n      'receiverEmail' : receiverEmail,\r\n      'receiverAddress' : receiverAddress,\r\n      'goodsDetail' : goodsDetail,\r\n      'weightInKilo' : weightInKilo,\r\n      'volumeInCBM' : volumeInCBM\r\n    }\r\n\r\n    \r\n    ShipmentService.postShipments(dataSubmit).then(\r\n      () => {\r\n        setSuccessMessage('Berhasil');\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        const resMessage = (error.response && error.response.data && error.response.data.message || error.message || error.toString()) \r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"shipment\">\r\n      <Container>\r\n        {succesMessage ?\r\n          <Alert variant=\"success\" className=\"notif\" show={show} onClose={() => setShow(false)}>\r\n            <p>{succesMessage}</p>\r\n          </Alert> : ''\r\n        }\r\n        \r\n        <Row>\r\n          <Form className=\"data-form\" onSubmit={handleSubmit}>\r\n            <div className=\"title-form\">Pengirim</div>\r\n            <Container className=\"left-padding\">\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Nama</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Nama\"  \r\n                    name=\"senderName\"\r\n                    value={senderName} \r\n                    onChange={e => setSenderName(e.target.value)}\r\n                  />\r\n                </Col>\r\n                  {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Email</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Email\"\r\n                    name=\"senderEmail\"\r\n                    value={senderEmail}\r\n                    onChange={e => setSenderEmail(e.target.value)}\r\n                    />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n   \r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Alamat</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Alamat\"\r\n                    name=\"senderAddress\"\r\n                    value={senderAddress}\r\n                    onChange={e => setSenderAddress(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n            </Container>\r\n\r\n            <div className=\"title-form\">Penerima</div>\r\n            <Container className=\"left-padding\">\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Nama</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Nama\"\r\n                    name=\"receiverName\"\r\n                    value={receiverName} \r\n                    onChange={e => setReceiverName(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Email</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Email\"\r\n                    name=\"receiverEmail\"\r\n                    value={receiverEmail} \r\n                    onChange={e => setReceiverEmail(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n   \r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Alamat</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Alamat\"\r\n                    name=\"receiverAddress\"\r\n                    value={receiverAddress} \r\n                    onChange={e => setReceiverAddress(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n            </Container>\r\n\r\n            <div className=\"title-form\">Muatan</div>\r\n            <Container className=\"left-padding\">\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Deskripsi</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Nama\"\r\n                    name=\"goodsDetail\"\r\n                    value={goodsDetail} \r\n                    onChange={e => setGoodsDetail(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Berat</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Kg\"\r\n                    name=\"weightInKilo\"\r\n                    value={weightInKilo} \r\n                    onChange={e => setWeightInKilo(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n   \r\n              <Form.Group as={Row}>\r\n                <Form.Label column md={2}>Volume</Form.Label>\r\n                <Col md={10}>\r\n                  <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"m3\"\r\n                    name=\"volumeInCBM\"\r\n                    value={volumeInCBM} \r\n                    onChange={e => setVolumeInCBM(e.target.value)}\r\n                  />\r\n                </Col>\r\n                {error ? <p className=\"text-error\">{errorMessage}</p> : ''}\r\n              </Form.Group>\r\n            </Container>\r\n          </Form>\r\n          <Button type=\"submit\" className=\"button-form-primary\" onClick={handleSubmit}>Submit</Button>\r\n        </Row>\r\n      </Container>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pengiriman\r\n\r\n","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\auth.services.js",["77"],"import axios from 'axios';\r\nconst API_URL = 'https://intotu-test.winfad.com/api/';\r\n\r\nconst login = (email, password) => {\r\n  const data = {\r\n    email : email,\r\n    password : password\r\n  }\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    // 'Authorization': 'Bearer ' + token\r\n  }\r\n\r\n  return axios\r\n    .post(`${API_URL}login`, data ,{\r\n      headers: headers,\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then((response) => {\r\n      if (response.data.auth.accessToken){\r\n        localStorage.setItem(\"auth\", JSON.stringify(response.data.auth))\r\n      }\r\n      return response.data.auth;\r\n    })\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"auth\")\r\n}\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"auth\"))\r\n}\r\n\r\nexport default {login, logout, getCurrentUser}","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\user.services.js",["78"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = 'https://intotu-test.winfad.com/api/'\r\n\r\nconst getShippingCount = () => {\r\n  return axios.get(`${API_URL}shipments/status-summary`,{ headers: authHeader() })\r\n}\r\n\r\nconst getShippingList = () => {\r\n  return axios.get(`${API_URL}shipments`,{ headers: authHeader() })\r\n}\r\nexport default {\r\n  getShippingCount,\r\n  getShippingList\r\n}","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\auth-header.js",[],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\pages\\DashboardHome.js",[],"D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\components\\TableShip.js",["79","80"],"import React, { useEffect, useState } from 'react';\r\nimport UserService from '../services/user.services';\r\nimport { Table } from 'react-bootstrap';\r\nimport * as Icon from \"react-icons/ai\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport '../custom.css';\r\n\r\nfunction TableShip() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [dataShipping, setDataShipping] = useState();\r\n\r\n\r\n  const showToggle = (e) => setIsOpen(!isOpen)\r\n  useEffect(() => {\r\n    UserService.getShippingList().then(\r\n      (response) => {\r\n        console.log('isi response table', response.data)\r\n        setDataShipping(response.data)\r\n        console.log('isi dataShipping', dataShipping)\r\n      }\r\n    )\r\n  }, {})\r\n\r\n  const columns = [\r\n    {\r\n      text: 'ID'\r\n    },\r\n    {\r\n      text: 'Data Pengirim'\r\n    },\r\n    {\r\n      text: 'Data Penerima'\r\n    },\r\n    {\r\n      text: 'Detail Barang'\r\n    },\r\n    {\r\n      text: 'Status'\r\n    },\r\n    {\r\n      text: 'Aksi'\r\n    },\r\n  ]\r\n  return (\r\n    <div className=\"table-ship\">\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((item, key) => (\r\n              <th key={key}>{item.text}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {dataShipping && dataShipping.data.map(data => (\r\n            <tr>\r\n              <td>\r\n                {data.id}\r\n              </td>\r\n              <td>\r\n                <Icon.AiOutlineCaretRight onClick={(e) => showToggle(e)} className={isOpen ? 'icon-direction' : 'icon-direction rotate'}/>\r\n                {data.senderName}\r\n                <div className={isOpen ? 'text-expand' : 'text-expand show'}>\r\n                  <div className=\"row-content\">\r\n                    <p>Alamat:</p>\r\n                    <p>{data.senderAddress}</p>\r\n                  </div>\r\n                  Email: {data.senderEmail}\r\n                </div>                \r\n              </td>\r\n              <td>\r\n                <Icon.AiOutlineCaretRight onClick={(e) => showToggle(e)} className={isOpen ? 'icon-direction' : 'icon-direction rotate'}/>\r\n                {data.receiverName}\r\n                <div className={isOpen ? 'text-expand' : 'text-expand show'}>\r\n                  <div className=\"row-content\">\r\n                    <p>Alamat:</p>\r\n                    <p>{data.receiverAddress}</p>\r\n                  </div>\r\n                  Email: {data.receiverEmail}\r\n                </div>\r\n              </td>\r\n              <td>\r\n                {data.goodsDetail}\r\n              </td>\r\n              <td>\r\n                {data.status}\r\n              </td>\r\n              <td>\r\n                aksi\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          \r\n        </tbody>\r\n      </Table>\r\n      \r\n      Total { dataShipping && (dataShipping.totalData)} items\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableShip\r\n","D:\\INNA\\KERJAAN\\semua-test\\test-dashboard-intotu\\src\\services\\shipments.services.js",["81"],"import axios from 'axios';\r\nconst API_URL = 'https://intotu-test.winfad.com/api/';\r\n\r\nconst postShipments = (data) => {\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n\r\n  return axios\r\n    .post(`${API_URL}shipments`, data, {\r\n      headers: headers,\r\n      body: JSON.stringify(data)\r\n    }).then((response) => {\r\n      console.log('isi response', response)\r\n      return response.data\r\n    })\r\n}\r\n\r\nexport default {postShipments}",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":50,"nodeType":"88","messageId":"89","endLine":4,"endColumn":58},{"ruleId":"86","severity":1,"message":"90","line":45,"column":15,"nodeType":"88","messageId":"89","endLine":45,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":45,"column":67,"nodeType":"93","messageId":"94","endLine":45,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":45,"column":98,"nodeType":"93","messageId":"94","endLine":45,"endColumn":100},{"ruleId":"95","severity":1,"message":"96","line":55,"column":9,"nodeType":"97","endLine":55,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":16,"column":11,"nodeType":"97","endLine":16,"endColumn":34},{"ruleId":"86","severity":1,"message":"90","line":52,"column":15,"nodeType":"88","messageId":"89","endLine":52,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":52,"column":67,"nodeType":"93","messageId":"94","endLine":52,"endColumn":69},{"ruleId":"91","severity":1,"message":"92","line":52,"column":98,"nodeType":"93","messageId":"94","endLine":52,"endColumn":100},{"ruleId":"98","severity":1,"message":"99","line":36,"column":1,"nodeType":"100","endLine":36,"endColumn":47},{"ruleId":"98","severity":1,"message":"99","line":13,"column":1,"nodeType":"100","endLine":16,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":22,"column":6,"nodeType":"103","endLine":22,"endColumn":8},{"ruleId":"101","severity":1,"message":"104","line":22,"column":6,"nodeType":"103","endLine":22,"endColumn":8,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"99","line":19,"column":1,"nodeType":"100","endLine":19,"endColumn":31},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'resMessage' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has a missing dependency: 'dataShipping'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [dataShipping]",{"range":"111","text":"112"},[729,731],"[dataShipping]"]